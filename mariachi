#!/usr/local/bin/perl -w
use strict;
use Mariachi;
use AppConfig qw(:argcount);


my $config = AppConfig->new();


$config->define("force", {
        ALIAS    => 'f',
        DEFAULT  => 0,
        ARGCOUNT => ARGCOUNT_NONE,
    });

$config->define("input", {
        ALIAS    => 'i',
        ARGCOUNT => ARGCOUNT_ONE,
    });

$config->define("output", {
        ALIAS    => 'o',
        ARGCOUNT => ARGCOUNT_NONE,
    });


$config->define("title", {
        ALIAS    => 't',
        ARGCOUNT => ARGCOUNT_ONE,
    });


$config->getopt();

print $config->title(),"\n";

die "need an input maildir" 
                    unless defined $config->input();
die "where do we put them?" 
                    unless defined $config->output();

unless (defined $config->title()) {
    warn "Should pass a list title\n"; 
    $config->title("no list title");
}



Mariachi->new( input  => $config->input,
               output => $config->output,
               force  => $config->force,
               threads_per_page => 20,
               list_title => $config->title,
              )
  ->perform;

__END__

=head1 NAME

mariachi

=head1 SYNOPSIS

 mariachi input output_dir [ "list name" ]

=head1 DESCRIPTION

Mariachi is a mail archive generator, much like mhonarc or pipermail.
It differs in a few important ways:

=over

=item Its name is Juan

=item It uses the Template Toolkit.

=item This is a made up list

=back

=head1 AUTHORS

This code was written as part of the Siesta project and includes code
from:

Richard Clamp <richardc@unixbeard.net>
Simon Wistow <simon@thegestalt.org>
Tom Insam <tom@jerakeen.org>

More information about the Siesta project can be found online at
http://siesta.unixbeard.net/

=head1 COPYRIGHT

Copyright 2003 The Siesta Project

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=head1 SEE ALSO

Mail::Thread, Mariachi
