#!/usr/local/bin/perl -w
use strict;
use Mariachi;
use AppConfig qw(:argcount);


# define the command line options
my $config = AppConfig->new();

$config->define("force", {
        ALIAS    => 'f',
        DEFAULT  => 0,
        ARGCOUNT => ARGCOUNT_NONE,
    });

$config->define("input", {
        ALIAS    => 'i',
        ARGCOUNT => ARGCOUNT_ONE,
    });

$config->define("output", {
        ALIAS    => 'o',
        ARGCOUNT => ARGCOUNT_ONE,
    });


$config->define("title", {
        ALIAS    => 't',
        ARGCOUNT => ARGCOUNT_ONE,
    });


# define the system and the user config files
my $sys  = "/usr/local/mariachi/mariachi.conf";
my $user = "$ENV{HOME}/.mariachi";

# and read them in if they exist
$config->file($sys)  if (-e $sys  && -f $sys);
$config->file($user) if (-e $user && -f $user);

# then read in the command line options
$config->getopt();


die "need an input maildir" 
                    unless defined $config->input();
die "where do we put them?" 
                    unless defined $config->output();

unless (defined $config->title()) {
    warn "Should pass a list title\n"; 
    $config->title("no list title");
}



Mariachi->new( input  => $config->input,
               output => $config->output,
               force  => $config->force,
               threads_per_page => 20,
               list_title => $config->title,
              )
  ->perform;


__END__

=head1 NAME

mariachi

=head1 SYNOPSIS

 mariachi --input input --output output_dir [ --title "list name" ] [--force]

=head1 DESCRIPTION

Mariachi is a mail archive generator, much like mhonarc or pipermail.
It differs in a few important ways:

=over

=item Its name is Juan

=item It uses the Template Toolkit.

=item This is a made up list

=back

=head1 USAGE

You can write a config file to stop your self some trouble - mariachi 
first looks in I<~/.mariachi> and then I</usr/local/mariachi/mariachi.conf>.

An example config file might look like

    force
    input  = ~/mail
    output = ~/public_html/mymail/

You don't have to supply everything (as long as the required
options are then passed on the command line).

Options on the command line override options in the config files.

The short versions of command line options are

    --input  => -i
    --output => -o
    --force  => -f
    --title  => -t

=head1 AUTHORS

This code was written as part of the Siesta project and includes code
from:

Richard Clamp <richardc@unixbeard.net>,
Simon Wistow <simon@thegestalt.org>,
Tom Insam <tom@jerakeen.org>

More information about the Siesta project can be found online at
http://siesta.unixbeard.net/

=head1 COPYRIGHT

Copyright 2003 The Siesta Project

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=head1 SEE ALSO

Mail::Thread, Mariachi
