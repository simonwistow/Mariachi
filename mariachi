#!/usr/local/bin/perl -w
use strict;
use Mail::Thread;
use Date::Parse qw(str2time);
use Template;
use Time::HiRes qw( gettimeofday tv_interval );

my $start = [gettimeofday];

my $maildir = shift || die "need an input maildir";
my $output = shift || die "where do we put them?";

my @mails = map {
    open my $fh, "<$_" or die "open: '$_' $!";
    Message->new($fh);
} <$maildir/cur/*>, <$maildir/new/*>;

# some messages have been near mail2news gateways, which means that
# some message ids get munged like so: <$group/$message_id>

# this should clean that up
my %names;
for my $mail (@mails) {
    next; # but it doesn't, we lose messages from the index?
    for (qw( references in_reply_to )) {
        my $hdr = $mail->$_() or next;
        my $before = $hdr;
        $hdr =~ s{<[^>]*?/}{<}g or next;
        #print "$_ $before$_: $hdr";
        $mail->$_($hdr);
    }
}

print scalar @mails, " messages loaded in ", tv_interval( $start )," seconds\n";
$start = [gettimeofday];

my $threader = Mail::Thread->new( @mails );
$threader->thread;

print "and threaded in ", tv_interval( $start ), " seconds\n";

$start = [gettimeofday];

my $tt = Template->new;

$tt->process('index.tt2',
             { threads => [ $threader->rootset ] },
             "$output/index.html") or die $tt->error;

for my $mail (@mails) {
    $tt->process('message.tt2',
                 { threads => [ $threader->rootset ],
                   message => $mail,
                 },
                 "$output/".$mail->filename) or die $tt->error;
}

print "output generation took ", tv_interval( $start ), " seconds\n";

exit 0;

package Message;
use Mail::Internet;
use Digest::MD5 qw(md5_base64);

use base qw(Mail::Internet);

sub filename {
    my $self = shift;
    md5_base64( $self->as_string ).".html"
}

sub subject {
    my $self = shift;
    $self->head->get('subject');
}

sub references {
    my $self = shift;
    $self->head->replace('references', shift) if @_;
    $self->head->get('references');
}

sub in_reply_to {
    my $self = shift;
    $self->head->replace('in-reply-to', shift) if @_;
    $self->head->get('in-reply-to');
}

sub date {
    my $self = shift;
    $self->head->get('date');
}

sub from {
    my $self = shift;
    my $from = $self->head->get('from');
    $from =~ s/<.*>//;
    $from =~ s/\@\S+//;
    $from;
}
