diff -urN Mail-Thread-2.1/Changes Mail-Thread-2.1_richardc/Changes
--- Mail-Thread-2.1/Changes	2003-03-25 15:36:59.000000000 +0000
+++ Mail-Thread-2.1_richardc/Changes	2003-04-15 22:38:22.000000000 +0100
@@ -1,5 +1,10 @@
 Revision history for Perl extension Mail::Thread.
 
+2.2   Tue Apr 15 2003
+    - Changes to the pruning algorithm based on the Java implementation.
+    - Implementation of subject based threading, also based on Grendel
+    - Added support for ordering
+
 2.0   Tue Mar 25 15:36:10 GMT 2003
     - Major update
     - Inheritability
diff -urN Mail-Thread-2.1/MANIFEST Mail-Thread-2.1_richardc/MANIFEST
--- Mail-Thread-2.1/MANIFEST	2003-03-31 12:08:51.000000000 +0100
+++ Mail-Thread-2.1_richardc/MANIFEST	2003-04-15 20:26:01.000000000 +0100
@@ -3,6 +3,7 @@
 MANIFEST
 README
 Thread.pm
+t/common.pl
 t/1.t
 t/2.t
 t/3.t
@@ -10,6 +11,8 @@
 t/5.t
 t/6.t
 t/7.t
+t/8.t
+t/9.t
 t/testbox
 t/testbox-2
 t/testbox-3
@@ -17,3 +20,5 @@
 t/testbox-5
 t/testbox-6
 t/testbox-7
+t/testbox-8
+t/testbox-9
diff -urN Mail-Thread-2.1/Thread.pm Mail-Thread-2.1_richardc/Thread.pm
--- Mail-Thread-2.1/Thread.pm	2003-03-31 12:08:58.000000000 +0100
+++ Mail-Thread-2.1_richardc/Thread.pm	2003-04-27 21:35:57.000000000 +0100
@@ -2,10 +2,10 @@
 
 use 5.00503;
 use strict;
-use vars qw($VERSION);
-sub debug (@) { print @_ if $Mail::Thread::debug }
+use vars qw($VERSION $debug $noprune $nosubject);
+sub debug (@) { print @_ if $debug }
 
-$VERSION = '2.1';
+$VERSION = '2.2';
 
 sub new {
     my $self = shift;
@@ -29,11 +29,12 @@
 sub _references {
     my $class = shift;
     my $msg = shift;
-    no warnings 'uninitialized';
+    no warnings 'uninitialized'; # use 5.00503?
     my @references = ($class->_get_hdr($msg, "References") =~ /<([^>]+)>/g);
     my $foo = $class->_get_hdr($msg,"In-Reply-To");
+    chomp $foo;
     $foo =~ s/.*?<([^>]+)>.*/$1/;
-    push @references, $foo if $foo =~ /\S+\@\S+/ and $references[-1] ne $foo;
+    push @references, $foo if $foo =~ /^\S+\@\S+$/ and $references[-1] ne $foo;
     return _uniq(@references);
 }
 
@@ -41,6 +42,8 @@
     my ($class, $msg) = @_;
     my $id= $msg->isa("Mail::Message") ? $msg->messageId :
             $class->_get_hdr($msg, "Message-ID");
+    die "attempt to thread message with no id" unless $id;
+    chomp $id;
     $id =~ s/^<([^>]+)>.*/$1/; # We expect this not to have <>s
     return $id;
 }
@@ -59,16 +62,118 @@
     }
 }
 
+sub _group_set_bysubject {
+    my $self = shift;
+    my $root = $self->_container_class->new( 'fakeroot' );
+    $root->set_children( $self->rootset );
+
+    my %subject;
+    for (my $walk = $root->child; $walk; $walk = $walk->next) {
+        my $sub = $walk->topmost->simple_subject or next;
+        # Add this container to the hash if:
+        # - There is no container in the hash with this subject, or
+        # - This one is a dummy container and the old one is not: the dummy
+        #   one is more interesting as a root, so put it in the hash instead.
+        # - The container in the table has a "Re:" version of this subject,
+        #   and this container has a non-"Re:" version of this subject.
+        #   The non-re version is the more interesting of the two.
+
+        my $old = $subject{$sub};
+        if (!$old ||
+            (!$walk->message && !$old->message) ||
+            ($old->message && $old->isreply &&
+             $walk->message && !$walk->isreply)) {
+            $subject{$sub} = $walk;
+        }
+    }
+    return unless %subject;
+
+    # %subject is now populated with one entry for each subject which
+    # occurs in the root set.  Now iterate over the root set, and gather
+    # together the difference.
+
+    my ($prev, $walk, $rest);
+    for ($walk = $root->child, $rest = eval{ $walk->next };
+         $walk;
+         $prev = $walk, $walk = $rest, $rest = eval { $rest->next }) {
+        my $subj = $walk->topmost->simple_subject or next;
+        my $old = $subject{$subj};
+        next if $old == $walk;
+
+        # Remove the "second" message from the root set
+        if (!$prev) { $root->child( $walk->next ) }
+        else        { $prev->next( $walk->next ) }
+        $walk->next(undef);
+
+        if (!$old->message && !$walk->message) {
+            # They're both dummies; merge them.
+            my @kids = $old->children;
+            $kids[-1]->next( $walk->child );
+            $_->parent( $old ) for $walk->children;
+            $walk->child( undef );
+        }
+        elsif (!$old->message || # old is empty, or
+               ($walk->message &&
+                $walk->isreply && # walk has reply, and old doesn't
+                !$old->isreply)) {
+            # Make this message be a child of the other.
+            $walk->parent( $old );
+            $walk->next( $old->child );
+            $old->child( $walk );
+        }
+        else {
+            # Make the old and new messages be children of a new dummy
+            # container.
+            # We do this by creating a new container object for old->msg and
+            # transforming the old container into a dummy (by merely emptying
+            # it), so that the hash table still points to the one that is at
+            # depth 0 instead of depth 1.
+
+            my $new = $self->_container_class->new( $old->messageid );
+            $new->message( $old->message );
+            $new->child( $old->child );
+            $_->parent( $new ) for $old->children;
+
+            $old->message( undef );
+            $old->child( undef );
+
+            $walk->parent( $old );
+            $new->parent( $old );
+
+            # old is now a dummy; make it have exactly two kids, walk and new
+            $old->set_children( $walk, $new );
+        }
+        # we've done a merge, so keep the same `prev' next time around.
+        $walk = $prev;
+    }
+
+    # repopulate the rootset from our fake one
+    my @kids = $root->children;
+    @{$self->{rootset}} = @kids;
+    for (@kids) {
+        $_->parent(undef);
+        $_->next(undef);
+    }
+}
+
 sub thread {
     my $self = shift;
     $self->_setup();
     $self->{rootset} = [ grep { !$_->parent } values %{$self->{id_table}} ];
     delete $self->{id_table};
     delete $self->{seen};
-    $self->{rootset} = [ map {$self->_prune_empties($_, 0)} @{$self->{rootset}} ]
-        unless $Mail::Thread::noprune;
+    unless ($noprune) {
+        my $fakeroot = $self->_container_class->new( 'fakeroot' );
+        $fakeroot->set_children( $self->rootset );
+        $self->_prune_empties($fakeroot, 0);
+        my @kids = @{$self->{rootset}} = $fakeroot->children;
+        for (@kids) {
+            $_->parent(undef);
+            $_->next(undef);
+        }
+    }
     delete $self->{seen};
-    #$self->_group_set_bysubject();
+    $self->_group_set_bysubject() unless $nosubject;
     $self->_finish();
 }
 
@@ -87,9 +192,7 @@
         $cont= $self->_container_class->new($id);
         $self->{id_table}{$id} = $cont;
     }
-    $cont->messageid($id);
     return $cont;
-
 }
 
 sub _container_class { "Mail::Thread::Container" }
@@ -118,7 +221,7 @@
         }
         if (defined $prev) { $prev->add_child($this_container) }
         debug "Done with this message!\n----\n";
-        if ($Mail::Thread::debug) {
+        if ($debug) {
             _dump( values %{$self->{id_table}} );
         }
     }
@@ -138,45 +241,95 @@
     debug " "x$level;
     debug "Looking at ".$cont->messageid."\n";
 
-    my @new_children;
-    for my $ctr ($cont->children) {
-        debug " "x$level;
-        debug "Recursing on child ".$ctr->messageid."\n";
-        my @L = $self->_prune_empties($ctr, $level+1);
-        push @new_children, @L;
-        debug " "x$level;
-        debug "Removing child ".$ctr->messageid."\n";
-        $ctr->remove_child($ctr);
+    my ($walk, $prev, $next);
+    for ($walk = $cont->child, $next = eval { $walk->next };
+         $walk;
+         $prev = $walk, $walk = $next, $next = eval { $walk->next } ) {
+
+       my @children = $walk->children;
+       debug " "x$level;
+       debug "Looking at ".$walk->messageid." ".@children." children\n";
+
+       if (!$walk->message and !@children) {
+           debug "No message and no children - killing\n";
+           if (!$prev) { $cont->child($walk->next) }
+           else        { $prev->next($walk->next)  }
+           $walk = $prev;
+           next;
+       }
+
+       if (!$walk->message and @children and (@children == 1 or $walk->parent)) {
+           debug "Promoting the children\n";
+           my $kids = $walk->child;
+           if (!$prev) { $cont->child($kids) }
+           else        { $prev->next($kids)  }
+
+           $_->parent($walk->parent) for @children;
+           $children[-1]->next( $walk->next );
+
+           $next = $kids;
+           $walk = $prev;
+           next;
+       }
+
+       if ($walk->child) {
+           debug "recursing on down\n";
+           $self->_prune_empties($walk, $level + 1);
+       }
     }
+}
 
-    debug " "x$level;
-    debug "Adding children @new_children\n";
-    $cont->add_child($_) for @new_children;
-    if (!$cont->message and !$cont->children) {
-        debug " "x$level;
-        debug "No message and no children - killing\n";
-        return ();
-    }
-    my @children = $cont->children;
-    if (!$cont->message and @children == 1 and $cont->parent) {
-        debug "Promoting the child of ".$cont->messageid."\n";
-        $cont->remove_child($_) for @children;
-        return @children;
-    }
-    return $cont;
-}   
+sub order {
+    my $self = shift;
+    my $ordersub = shift;
+
+    # make a fake root
+    my $root = $self->_container_class->new( 'fakeroot' );
+    $root->set_children( $self->rootset );
+
+    # sort it
+    $root->order_children( $ordersub );
+
+    # and untangle it
+    @{$self->{rootset}} = $root->children;
+    $_->next(undef) for $root->children;
+}
 
 package Mail::Thread::Container;
 use Carp qw(carp confess croak cluck);
 
-sub new { my $self = shift; bless { @_ }, $self; }
+sub new { my $self = shift; bless { id => shift }, $self; }
 
 sub message { $_[0]->{message} = $_[1] if @_ == 2; $_[0]->{message} }
 sub child   { $_[0]->{child}   = $_[1] if @_ == 2; $_[0]->{child}   }
 sub parent  { $_[0]->{parent}  = $_[1] if @_ == 2; $_[0]->{parent}  }
 sub next    { $_[0]->{next}    = $_[1] if @_ == 2; $_[0]->{next}    }
 sub messageid { $_[0]->{id}      = $_[1] if @_ == 2; $_[0]->{id}      }
-sub subject { eval { $_[0]->message->head->get("Subject") } }
+sub subject { eval { my $s = $_[0]->message->head->get("Subject") ||''; chomp $s; $s } }
+
+sub topmost {
+    my $self = shift;
+
+    return $self if $self->message;
+    my $sib = eval { $self->next->topmost };
+    return $sib if $sib;
+    my $kid = eval { $self->child->topmost };
+    return $kid if $kid;
+    return;
+}
+
+sub isreply {
+    my $self = shift;
+    my $subject = $self->subject or return;
+    $subject =~ m{^re:\s+}i;
+}
+
+sub simple_subject {
+    my $self = shift;
+    my $subject = $self->subject;
+    $subject =~ s/^re:\s+//gi;
+    $subject;
+}
 
 sub add_child {
     my ($self, $child) = @_;
@@ -217,10 +370,10 @@
     my $x = $self->child;
     my $prev = $x;
     while ($x = $x->next) {
-        if ($x == $child) { 
+        if ($x == $child) {
             $prev->next($x->next); # Unlink x
             $x->parent(undef);     # Deparent it
-            return; 
+            return;
         }
         $prev = $x;
     }
@@ -245,6 +398,30 @@
     return @children;
 }
 
+sub set_children {
+    my $self = shift;
+    my $walk = $self->child( shift );
+    while (@_) { $walk = $walk->next( shift ) }
+    $walk->next(undef) if $walk;
+}
+
+
+sub order_children {
+    my $self = shift;
+    my $ordersub = shift;
+
+    return unless $ordersub;
+
+    my $sub = sub {
+        my $cont = shift;
+        my @children = $cont->children;
+        return if @children < 2;
+        $cont->set_children( $ordersub->( @children ) );
+    };
+    $self->iterate_down( undef, $sub );
+    undef $sub;
+}
+
 sub recurse_down {
     my %seen;
     my $do_it_all;
@@ -254,18 +431,51 @@
         $seen{$self}++;
         $callback->($self);
 
-        if ($seen{$self->next}) { $self->next(undef) }
+        if ($self->next && $seen{$self->next}) { $self->next(undef) }
         $do_it_all->($self->next, $callback)  if $self->next;
-        if ($seen{$self->child}) { $self->child(undef) }
+        if ($self->child && $seen{$self->child}) { $self->child(undef) }
         $do_it_all->($self->child, $callback) if $self->child;
 
     };
     $do_it_all->(@_);
 }
 
+sub iterate_down {
+    my $self = shift;
+    my ($before, $after) = @_;
+
+    my %seen;
+    my $walk = $self;
+    my $depth = 0;
+    while ($walk) {
+        $before->($walk, $depth) if $before;
+
+        # spot/break loops
+        $seen{$walk}++;
+        if ($walk->child && $seen{$walk->child}) { $walk->child(undef) }
+        if ($walk->next  && $seen{$walk->next})  { $walk->next(undef) }
+
+        my $next;
+        # go down, or across
+        if ($walk->child) { $next = $walk->child; ++$depth }
+        else              { $next = $walk->next }
+
+        # no next?  wander back up
+        if (!$next) {
+            my $up = $walk;
+            while ($up && !$next) {
+                $after->($up, $depth) if $after;
+                $up = $up->parent;  --$depth;
+                $next = $up->next if $up;
+            }
+        }
+        $walk = $next;
+    }
+    $after->($self, 0) if $after;
+}
+
 1;
 __END__
-# Below is stub documentation for your module. You'd better edit it!
 
 =head1 NAME
 
@@ -282,7 +492,7 @@
 
     sub dump_em {
         my ($self, $level) = @_;
-        debug (' \\-> ' x $level);
+        print ' \\-> ' x $level;
         if ($self->message) {
             print $self->message->head->get("Subject") , "\n";
         } else {
@@ -298,8 +508,6 @@
 threading algorithm, as described by http://www.jwz.org/doc/threading.html.
 Any deviations from the algorithm are accidental.
 
-It doesn't do threading by subject yet, because I don't need it yet.
-
 It's happy to be handed C<Mail::Internet> and C<Mail::Box::Message> objects,
 since they're more or less the same, but nothing other than that.
 
@@ -318,6 +526,10 @@
 Returns a list of C<Mail::Thread::Container>s which are not the parents
 of any other message.
 
+=head2 order($ordering_sub)
+
+calls C<order_children> over each memeber of the root set, from one level higher
+
 =head1 C<Mail::Thread::Container> methods
 
 C<Mail::Thread::Container>s are the nodes of the thread tree. You can't just
@@ -343,12 +555,24 @@
 
 Returns the message held in this container, if we have one.
 
-=head2 id
+=head2 messageid
 
 Returns the message ID for this container. This will be around whether we
 have the message or not, since some other message will have referred to it
 by message ID.
 
+=head2 subject
+
+returns the subject line of the contained message
+
+=head2 isreply
+
+examines the results of ->subject and returns true if it looks like a reply
+
+=head2 simple_subject
+
+the simplified version of ->subject (with reply markers removed)
+
 =head2 has_descendent($child)
 
 Returns true if this container has the given container as a child somewhere
@@ -366,6 +590,28 @@
 
 Returns a list of the B<immediate> children of this container.
 
+=head2 set_children(@children)
+
+set the children of a node.  does not update the ->parents of the @children
+
+=head2 order_children($ordering_sub)
+
+Recursively reorders children according to the results of $ordering_sub
+
+$ordering_sub is called with the containers children, and is expected to
+return them in their new order.
+
+ # order by subject line
+ $container->order_children( sub {
+    sort { $a->topmost->message->subject cmp $b->topmost->message->subject } @_
+  } );
+
+$ordering_sub may be omitted, in which case no ordering takes place
+
+=head2 topmost
+
+Walks the tree to return the topmost container with a message attached
+
 =head2 recurse_down($callback)
 
 Calls the given callback on this node and B<all> of its children.
@@ -379,6 +625,6 @@
 Copyright 2003 by Kasei
 
 This library is free software; you can redistribute it and/or modify
-it under the same terms as Perl itself. 
+it under the same terms as Perl itself.
 
 =cut
diff -urN Mail-Thread-2.1/t/1.t Mail-Thread-2.1_richardc/t/1.t
--- Mail-Thread-2.1/t/1.t	2003-03-10 13:06:56.000000000 +0000
+++ Mail-Thread-2.1_richardc/t/1.t	2003-04-22 12:33:38.000000000 +0100
@@ -1,23 +1,19 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 3;
 use_ok("Mail::Thread");
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox");
 
-my $threader = new Mail::Thread($box->messages);
+my $threader = new Mail::Thread(slurp_messages('t/testbox'));
 $Mail::Thread::debug=0;
-
 $Mail::Thread::noprune=1;
+$Mail::Thread::nosubject=1;
 $threader->thread;
 
 is($threader->rootset, 3, "We have three main threads");
 
 my @stuff;
-for ($threader->rootset) {
+for (sort { $a->topmost->subject cmp $b->topmost->subject } $threader->rootset) {
     dump_em($_, 0);
 }
 
@@ -27,24 +23,16 @@
         use Data::Dumper; die Dumper $self;
     }
     push @stuff, 
-    [ $level, eval { "".$self->message->head->get("Subject") }
-             || "[ Message not available ]" ];
+    [ $level, $self->message ? $self->subject : "[ Message not available ]" ];
+            
     dump_em($self->next, $level) if $self->next;
     dump_em($self->child, $level+1) if $self->child;
 }
 
-is_deeply(\@stuff,
+deeply(\@stuff,
  [
           [
             0,
-            '[rt-users] Configuration Problem'
-          ],
-          [
-            1,
-            'Re: [rt-users] Configuration Problem'
-          ],
-          [
-            0,
             '[ Message not available ]'
           ],
           [
@@ -86,7 +74,15 @@
           [
             2,
             'RE: [p5ml] Re: karie kahimi binge...help needed'
-          ]
+          ],
+          [
+            0,
+            '[rt-users] Configuration Problem'
+          ],
+          [
+            1,
+            'Re: [rt-users] Configuration Problem'
+          ],
         ]
  , "It all works");
 
diff -urN Mail-Thread-2.1/t/2.t Mail-Thread-2.1_richardc/t/2.t
--- Mail-Thread-2.1/t/2.t	2003-03-11 15:02:53.000000000 +0000
+++ Mail-Thread-2.1_richardc/t/2.t	2003-04-13 02:28:04.000000000 +0100
@@ -1,26 +1,22 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 9;
 use_ok("Mail::Thread");
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox-2");
 
-my $threader = new Mail::Thread($box->messages);
+my $threader = new Mail::Thread(slurp_messages('t/testbox-2'));
 
 my @stuff;
 for (0..3) { # This tests that multiple applications of the algorithm work OK.
     @stuff = ();
-$threader->thread;
+    $threader->thread;
 
-is($threader->rootset, 1, "We have one main threads");
+    is($threader->rootset, 1, "We have one main threads");
 
-for ($threader->rootset) { dump_em($_, 0); }
+    for ($threader->rootset) { dump_em($_, 0); }
 
-is_deeply(\@stuff,
- [
+    deeply(\@stuff,
+      [
           [ 0, "sort numbers", '20030101210258.63148.qmail@web20805.mail.yahoo.com' ],
           [ 1, "Re: sort numbers", 'auvpjq$ede$1@post.home.lunix' ],
           [ 1, "Re: sort numbers", 'r3i71vcul4g95orb58173qj6b8dus6pnch@4ax.com' ]
@@ -30,7 +26,7 @@
 sub dump_em {
     my ($self, $level) = @_;
     push @stuff, 
-    [ $level, eval { "".$self->message->head->get("Subject") }, $self->{id}
+    [ $level, $self->subject, $self->{id}
              || "[ Message not available ]" ];
     dump_em($self->next, $level) if $self->next;
     dump_em($self->child, $level+1) if $self->child;
diff -urN Mail-Thread-2.1/t/3.t Mail-Thread-2.1_richardc/t/3.t
--- Mail-Thread-2.1/t/3.t	2003-03-25 15:32:08.000000000 +0000
+++ Mail-Thread-2.1_richardc/t/3.t	2003-04-13 02:36:58.000000000 +0100
@@ -1,14 +1,10 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 3;
 use_ok("Mail::Thread");
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox-3");
 
-my $threader = new Mail::Thread($box->messages);
+my $threader = new Mail::Thread(slurp_messages('t/testbox-3'));
 $threader->thread;
 
 is($threader->rootset, 1, "We have one main thread");
@@ -21,15 +17,13 @@
 sub dump_em {
     my ($self, $level) = @_;
     push @stuff, 
-    [ $level, 
-    (eval { "".$self->message->head->get("Subject") } || "[ Message not available ]")
-    , $self->{id} ];
+    [ $level, $self->message ? $self->subject : "[ Message not available ]",
+      $self->{id} ];
     dump_em($self->next, $level) if $self->next;
     dump_em($self->child, $level+1) if $self->child;
 }
 
-use Data::Dumper; print Dumper(\@stuff);
-is_deeply(\@stuff,
+deeply(\@stuff,
 [
           [
             0,
@@ -38,18 +32,13 @@
           ],
           [
             1,
-            '[ Message not available ]',
-            '20030102144211.GV7700@ox.compsoc.net'
-          ],
-          [
-            1,
             'Re: Zip/Postal codes.',
-            '20030102115117.A21351@cs839290-a.mtth.phub.net.cable.rogers.com'
+            '3E146C15.8000302@ntlworld.com'
           ],
           [
             1,
             'Re: Zip/Postal codes.',
-            '3E146C15.8000302@ntlworld.com'
+            '20030102115117.A21351@cs839290-a.mtth.phub.net.cable.rogers.com'
           ],
           [
             2,
diff -urN Mail-Thread-2.1/t/4.t Mail-Thread-2.1_richardc/t/4.t
--- Mail-Thread-2.1/t/4.t	2003-03-17 07:06:37.000000000 +0000
+++ Mail-Thread-2.1_richardc/t/4.t	2003-04-15 20:27:46.000000000 +0100
@@ -1,15 +1,10 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 3;
 use_ok("Mail::Thread");
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox-4");
-
-my $threader = new Mail::Thread($box->messages);
-
+my $threader = new Mail::Thread(slurp_messages('t/testbox-4'));
+$Mail::Thread::nosubject=1;
 $threader->thread;
 
 is($threader->rootset, 2, "We have two main threads");
@@ -22,13 +17,13 @@
 sub dump_em {
     my ($self, $level) = @_;
     push @stuff, 
-    [ $level, eval { "".$self->message->head->get("Subject") }, $self->{id}
-             || "[ Message not available ]" ];
+    [ $level, $self->message ? $self->subject : "[ Message not available ]", 
+      $self->{id} ];
     dump_em($self->next, $level) if $self->next;
     dump_em($self->child, $level+1) if $self->child;
 }
 
-is_deeply(\@stuff,
+deeply(\@stuff,
 [
           [
             0,
diff -urN Mail-Thread-2.1/t/5.t Mail-Thread-2.1_richardc/t/5.t
--- Mail-Thread-2.1/t/5.t	2003-03-25 16:03:02.000000000 +0000
+++ Mail-Thread-2.1_richardc/t/5.t	2003-04-13 01:07:57.000000000 +0100
@@ -1,7 +1,5 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 2;
 use_ok("Mail::Thread");
@@ -20,15 +18,11 @@
     my ($class, $id) = @_;
     if (!$stuff{$id})  { $stuff{$id} = $class->SUPER::new($id); }
     return $stuff{$id};
-
 }
 
 package main;
 
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox-5");
-
-for ($box->messages) {
+for (slurp_messages('t/testbox-5')) {
     my $threader = new My::Thread($_);
 
     $threader->thread;
diff -urN Mail-Thread-2.1/t/6.t Mail-Thread-2.1_richardc/t/6.t
--- Mail-Thread-2.1/t/6.t	2003-03-25 16:03:16.000000000 +0000
+++ Mail-Thread-2.1_richardc/t/6.t	2003-04-13 01:07:57.000000000 +0100
@@ -1,14 +1,10 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 2;
 use_ok("Mail::Thread");
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox-6");
 
-my $threader = new Mail::Thread($box->messages);
+my $threader = new Mail::Thread(slurp_messages('t/testbox-6'));
 $threader->thread;
 
 ok(2, "Avoid loops at all cost");
diff -urN Mail-Thread-2.1/t/7.t Mail-Thread-2.1_richardc/t/7.t
--- Mail-Thread-2.1/t/7.t	2003-03-31 12:08:35.000000000 +0100
+++ Mail-Thread-2.1_richardc/t/7.t	2003-04-13 01:07:57.000000000 +0100
@@ -1,14 +1,10 @@
-BEGIN { eval "use Mail::Box::Manager;"; 
-    if ($@) { require Test::More; Test::More->import(skip_all =>
-        "You don't have Mail::Box::Manager"); exit; }
-}
+#!perl -w
+BEGIN { require 't/common.pl' }
 
 use Test::More tests => 2;
 use_ok("Mail::Thread");
-my $mgr = new Mail::Box::Manager;
-my $box = $mgr->open(folder => "t/testbox-7");
 
-my $threader = new Mail::Thread($box->messages);
+my $threader = new Mail::Thread(slurp_messages 't/testbox-7');
 $threader->thread;
 
 is($threader->rootset, 1, "We have one main thread");
diff -urN Mail-Thread-2.1/t/8.t Mail-Thread-2.1_richardc/t/8.t
--- Mail-Thread-2.1/t/8.t	1970-01-01 01:00:00.000000000 +0100
+++ Mail-Thread-2.1_richardc/t/8.t	2003-04-13 02:28:49.000000000 +0100
@@ -0,0 +1,47 @@
+#!perl -w
+BEGIN { require 't/common.pl' }
+
+use Test::More tests => 3;
+use_ok("Mail::Thread");
+
+# this tests multi-level pruning
+
+my $threader = new Mail::Thread(slurp_messages('t/testbox-8'));
+$threader->thread;
+
+is($threader->rootset, 1, "We have one thread");
+
+my @stuff;
+for ($threader->rootset) {
+    dump_em($_, 0);
+}
+
+sub dump_em {
+    my ($self, $level) = @_;
+    if ($self->next and ref($self->next) !~ /Container/) {
+        use Data::Dumper; die Dumper $self;
+    }
+    push @stuff, 
+    [ $level, $self->message ? $self->subject : "[ Message not available ]" ];
+            
+    dump_em($self->next, $level) if $self->next;
+    dump_em($self->child, $level+1) if $self->child;
+}
+
+deeply(\@stuff,
+  [
+      [
+        0,
+        'Re: spamassassin'
+      ],
+      [
+        1,
+        'Re: spamassassin'
+      ],
+      [
+        1,
+        'Re: spamassassin'
+      ]
+    ],
+ , "It all works");
+
diff -urN Mail-Thread-2.1/t/9.t Mail-Thread-2.1_richardc/t/9.t
--- Mail-Thread-2.1/t/9.t	1970-01-01 01:00:00.000000000 +0100
+++ Mail-Thread-2.1_richardc/t/9.t	2003-04-13 02:36:13.000000000 +0100
@@ -0,0 +1,41 @@
+#!perl -w
+BEGIN { require 't/common.pl' }
+
+use Test::More tests => 3;
+use_ok("Mail::Thread");
+
+# this tests subject threading
+
+my $threader = new Mail::Thread(slurp_messages('t/testbox-9'));
+$threader->thread;
+
+is($threader->rootset, 1, "We have one thread");
+
+my @stuff;
+for ($threader->rootset) {
+    dump_em($_, 0);
+}
+
+sub dump_em {
+    my ($self, $level) = @_;
+    if ($self->next and ref($self->next) !~ /Container/) {
+        use Data::Dumper; die Dumper $self;
+    }
+    push @stuff, 
+    [ $level, $self->message ? $self->subject : "[ Message not available ]" ];
+            
+    dump_em($self->next, $level) if $self->next;
+    dump_em($self->child, $level+1) if $self->child;
+}
+
+deeply(\@stuff, 
+       [ 
+         [ 0, "Perl 6 Apocalypse 6" ],
+         [ 1, "Re: Perl 6 Apocalypse 6" ],
+         [ 1, "Re: Perl 6 Apocalypse 6" ],
+         [ 2, "Re: Perl 6 Apocalypse 6" ],
+         [ 3, "Re: Perl 6 Apocalypse 6" ],
+         [ 2, "Re: Perl 6 Apocalypse 6" ],
+       ], "It all works");
+ 
+
diff -urN Mail-Thread-2.1/t/common.pl Mail-Thread-2.1_richardc/t/common.pl
--- Mail-Thread-2.1/t/common.pl	1970-01-01 01:00:00.000000000 +0100
+++ Mail-Thread-2.1_richardc/t/common.pl	2003-04-13 02:24:45.000000000 +0100
@@ -0,0 +1,33 @@
+use strict;
+BEGIN { eval "use Mail::Internet;";
+    if ($@) { 
+	require Test::More; 
+	Test::More->import(skip_all =>"You don't have Mail::Internet"); 
+	exit; 
+    }
+    eval "use Test::Differences";
+}
+
+sub slurp_messages {
+    my $mbox = shift;
+    open FH, $mbox or return;
+    my @messages;
+    my @lines;
+    while (<FH>) {
+	if (/^From / && @lines) {
+            my $mail = Mail::Internet->new(\@lines);
+            push @messages, $mail;
+            @lines = ();
+        }
+        push @lines, $_;
+    }
+    return @messages, Mail::Internet->new(\@lines);
+}
+
+# a beefed up is_deeply
+sub deeply ($$;$) {
+    goto &eq_or_diff if defined &eq_or_diff;
+    goto &is_deeply;
+}
+
+1;
diff -urN Mail-Thread-2.1/t/testbox-8 Mail-Thread-2.1_richardc/t/testbox-8
--- Mail-Thread-2.1/t/testbox-8	1970-01-01 01:00:00.000000000 +0100
+++ Mail-Thread-2.1_richardc/t/testbox-8	2003-04-13 01:07:57.000000000 +0100
@@ -0,0 +1,312 @@
+From london.pm-admin@london.pm.org Sat Mar  1 13:51:44 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Sat, 01 Mar 2003 13:51:44 +0000 (GMT)
+Received: from punt-2.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1046477935:20:04275:7; Sat, 01 Mar 2003 00:18:55 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-2.mail.demon.net
+           id aa2002979; 1 Mar 2003 0:18 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18oudn-000563-00; Sat, 01 Mar 2003 00:14:11 +0000
+Received: from theproject.fierypit.org ([217.10.129.148])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18oucw-00055d-00
+	for <london.pm@london.pm.org>; Sat, 01 Mar 2003 00:13:18 +0000
+Received: from bob (helo=localhost)
+	by theproject.fierypit.org with local-esmtp (Exim 3.36 #1)
+	id 18ougI-0007Qc-00
+	for london.pm@london.pm.org; Sat, 01 Mar 2003 00:16:46 +0000
+From: Bob Walker <bob@randomness.org.uk>
+X-X-Sender: bob@theproject.fierypit.org
+To: london.pm@london.pm.org
+Subject: Re: spamassassin
+In-Reply-To: <200302282323.h1SNN4o15987@rszemeti.demon.co.uk>
+Message-ID: <Pine.GSO.4.50.0303010015230.21567-100000@theproject.fierypit.org>
+References: <20030228174141.GA12360@plough.barnyard.co.uk>
+ <20030228202957.GA12579@plough.barnyard.co.uk>
+ <Pine.GSO.4.50.0302282233040.21567-100000@theproject.fierypit.org>
+ <200302282323.h1SNN4o15987@rszemeti.demon.co.uk>
+MIME-Version: 1.0
+Content-Type: TEXT/PLAIN; charset=US-ASCII
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Sat, 1 Mar 2003 00:16:46 +0000 (GMT)
+Date: Sat, 1 Mar 2003 00:16:46 +0000 (GMT)
+Status: RO
+Content-Length: 1208
+
+On Fri, 28 Feb 2003, Robin Szemeti wrote:
+
+> On Friday 28 February 2003 22:34, Bob Walker wrote:
+> > On Fri, 28 Feb 2003, David Cantrell wrote:
+> > > I'd forgotten about running stuff out of inittab though - I don't often
+> > > go delving in there.  It's a bit of a nasty hack though.
+>
+> I saved forgetting abut innittab by not knowing about it in the first place :)
+>
+> > you could always do it with DJB's deamontools. which checks to make sure
+> > things are runnign and if not starts them.
+>
+> ooh .. wild guess .. (ive not seen that particular peice of DJB crackware) ..
+> mmm it will need a /daemontools directory (as in a new directory in / ) the
+> config files are in /var, the binaries too. the there will be some lock
+> files, they could be anywhere .. there will be no man pages (except on the
+> net, that way they are never out of date, but may not match your software) ...
+>
+> am I close?
+
+yep. som eo fhis tuff is quite nice though. and yes he does have slight
+quirks. Im led to belive he doesnt comment his code either.
+
+>
+>
+
+-- 
+Bob Walker
+http://www.randomness.org.uk/
+Help! Mutated Tigers from the Antartic are invading Outer Mongolia.
+Send the Mashed Bunnies of Perpignan to defeat them.
+
+
+From london.pm-admin@london.pm.org Sat Mar  1 13:51:46 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Sat, 01 Mar 2003 13:51:46 +0000 (GMT)
+Received: from punt-2.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1046483429:20:10963:20; Sat, 01 Mar 2003 01:50:29 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-2.mail.demon.net
+           id aa2010747; 1 Mar 2003 1:50 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18ow0A-0005iA-00; Sat, 01 Mar 2003 01:41:22 +0000
+Received: from anchor-post-35.mail.demon.net ([194.217.242.85])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18ovzM-0005hi-00
+	for <london.pm@london.pm.org>; Sat, 01 Mar 2003 01:40:32 +0000
+Received: from rszemeti.demon.co.uk ([158.152.98.107])
+	by anchor-post-35.mail.demon.net with esmtp (Exim 3.36 #2)
+	id 18ow2i-0003A2-0Z
+	for london.pm@london.pm.org; Sat, 01 Mar 2003 01:44:00 +0000
+Received: from localhost (localhost [[UNIX: localhost]])
+	by rszemeti.demon.co.uk (8.11.6/8.11.2) id h211hvD16626
+	for london.pm@london.pm.org; Sat, 1 Mar 2003 01:43:57 GMT
+Message-Id: <200303010143.h211hvD16626@rszemeti.demon.co.uk>
+Content-Type: text/plain;
+  charset="iso-8859-1"
+From: Robin Szemeti <robin@rszemeti.demon.co.uk>
+Organization: home
+To: london.pm@london.pm.org
+Subject: Re: spamassassin
+X-Mailer: KMail [version 1.3.1]
+References: <20030228174141.GA12360@plough.barnyard.co.uk> <200302282323.h1SNN4o15987@rszemeti.demon.co.uk> <Pine.GSO.4.50.0303010015230.21567-100000@theproject.fierypit.org>
+In-Reply-To: <Pine.GSO.4.50.0303010015230.21567-100000@theproject.fierypit.org>
+X-No-Archive: No
+X-Mail-Archiver: Aardvark Platinum V2.03 ( with XML parse tree options )
+MIME-Version: 1.0
+Content-Transfer-Encoding: 8bit
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+X-Reply-To: robin@redpoint.org.uk
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Sat, 1 Mar 2003 01:43:56 +0000
+Date: Sat, 1 Mar 2003 01:43:56 +0000
+Status: RO
+Content-Length: 478
+
+On Saturday 01 March 2003 00:16, Bob Walker wrote:
+> On Fri, 28 Feb 2003, Robin Szemeti wrote:
+> > am I close?
+>
+> yep. som eo fhis tuff is quite nice though. and yes he does have slight
+> quirks. Im led to belive he doesnt comment his code either.
+
+oh for sure .. qmail works well etc etc ... the only things I find odd are 
+his layout .. new dirs in / whenever he feels like it ... binaries in /var 
+etc .. weirdass stuff .. but yes .. it *does* work well
+
+-- 
+Robin Szemeti
+
+
+From london.pm-admin@london.pm.org Sat Mar  1 13:51:43 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Sat, 01 Mar 2003 13:51:43 +0000 (GMT)
+Received: from punt-1.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1046514550:10:05020:11; Sat, 01 Mar 2003 10:29:10 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-1.mail.demon.net
+           id aa1004775; 1 Mar 2003 10:28 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18p4B5-0000g6-00; Sat, 01 Mar 2003 10:25:11 +0000
+Received: from colon.colondot.net ([193.201.200.70] ident=mailnull)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18p4AG-0000fa-00
+	for <london.pm@london.pm.org>; Sat, 01 Mar 2003 10:24:20 +0000
+Received: from mbm by colon.colondot.net with local (Exim 4.10)
+	id 18p4Dc-000HiF-00
+	for london.pm@london.pm.org; Sat, 01 Mar 2003 10:27:48 +0000
+From: Lusercop <`the.lusercop'@lusercop.net>
+To: london.pm@london.pm.org
+Subject: Re: spamassassin
+Message-ID: <20030301102748.GC67225@colon.colondot.net>
+References: <20030228174141.GA12360@plough.barnyard.co.uk> <20030228202957.GA12579@plough.barnyard.co.uk> <Pine.GSO.4.50.0302282233040.21567-100000@theproject.fierypit.org> <200302282323.h1SNN4o15987@rszemeti.demon.co.uk> <Pine.GSO.4.50.0303010015230.21567-100000@theproject.fierypit.org>
+Mime-Version: 1.0
+Content-Type: text/plain; charset=us-ascii
+Content-Disposition: inline
+In-Reply-To: <Pine.GSO.4.50.0303010015230.21567-100000@theproject.fierypit.org>
+User-Agent: Mutt/1.4i
+Organization: Lusercop
+Mail-Copies-To: never
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Sat, 1 Mar 2003 10:27:48 +0000
+Date: Sat, 1 Mar 2003 10:27:48 +0000
+Status: RO
+Content-Length: 3117
+
+On Sat, Mar 01, 2003 at 12:16:46AM +0000, Bob Walker wrote:
+> yep. som eo fhis tuff is quite nice though. and yes he does have slight
+> quirks. Im led to belive he doesnt comment his code either.
+
+(qmail-1.03/datetime.c)
+| void datetime_tai(dt,t)
+| struct datetime *dt;
+| datetime_sec t;
+| {
+|   int day;
+|   int tod;
+|   int year;
+|   int yday;
+|   int wday;
+|   int mon;
+|  
+|   tod = t % 86400;
+|   day = t / 86400;
+|   if (tod < 0) { tod += 86400; --day; }
+|  
+|   dt->hour = tod / 3600;
+|   tod %= 3600;
+|   dt->min = tod / 60;
+|   dt->sec = tod % 60;
+|  
+|   wday = (day + 4) % 7; if (wday < 0) wday += 7;
+|   dt->wday = wday;
+|  
+|   day -= 11017;
+|   /* day 0 is march 1, 2000 */
+
+First comment
+
+|   year = 5 + day / 146097;
+|   day = day % 146097; if (day < 0) { day += 146097; --year; }
+|   /* from now on, day is nonnegative */
+
+Second comment
+
+|   year *= 4;
+|   if (day == 146096) { year += 3; day = 36524; }
+|   else { year += day / 36524; day %= 36524; }
+|   year *= 25;
+|   year += day / 1461;
+|   day %= 1461;
+|   year *= 4;
+|   yday = (day < 306);
+|   if (day == 1460) { year += 3; day = 365; }
+|   else { year += day / 365; day %= 365; }
+|   yday += day;
+|  
+|   day *= 10;
+|   mon = (day + 5) / 306;
+|   day = day + 5 - 306 * mon;
+|   day /= 10;
+|   if (mon >= 10) { yday -= 306; ++year; mon -= 10; }
+|   else { yday += 59; mon += 2; }
+|  
+|   dt->yday = yday;
+|   dt->year = year - 1900;
+|   dt->mon = mon;
+|   dt->mday = day + 1;
+| }
+
+So 2 comments and at least 12 unique unobvious undocumented constants.
+
+(qmail-1.03/qmail-send.c) has lots of:
+| /* this file is too long ----------------------------------------- xxxxx */
+
+which is really helpful. But of course, the main code is self-documenting:
+| void fnmake_info(id) unsigned long id; { fn.len = fmtqfn(fn.s,"info/",id,1); }
+| void fnmake_todo(id) unsigned long id; { fn.len = fmtqfn(fn.s,"todo/",id,0); }
+| void fnmake_mess(id) unsigned long id; { fn.len = fmtqfn(fn.s,"mess/",id,1); }
+| void fnmake_foop(id) unsigned long id; { fn.len = fmtqfn(fn.s,"foop/",id,0); }
+
+and then we see:
+| /* 1 if by land, 2 if by sea, 0 if out of memory. not allowed to barf. */
+| /* may trash recip. must set up rwline, between a T and a \0. */
+| int rewrite(recip)
+| char *recip;
+
+In (qmail-1.03/qmail-qmtpd.c):
+|       while (len > 0) { /* XXX: could speed this up, obviously */
+|         substdio_get(&ssin,&ch,1);
+|         --len;
+|         qmail_put(&qq,&ch,1);
+|       }
+
+Obviously? With his random functions it's not obvious at all.
+
+That's enough of the *worst* things I've found. Most of it is completely
+uncommented, and the source is scattered in loads of little files with a
+single function in them. There are man pages though.
+
+I'd also like to bring your attention to a quote by Tony Finch:
+| <fanf2> what kind of dickwit writes install scripts in C?
+| <fanf2> oh djb *sigh*
+
+Unfortunately I can't find all the "/* I hate NFS */" comments, and I
+suspect they might be in ezmlm rather than qmail. Rest assured that I
+like the code for ezmlm just as much as I like the code for qmail.
+
+-- 
+Lusercop.net - LARTing Lusers everywhere since 2002
+
+
diff -urN Mail-Thread-2.1/t/testbox-9 Mail-Thread-2.1_richardc/t/testbox-9
--- Mail-Thread-2.1/t/testbox-9	1970-01-01 01:00:00.000000000 +0100
+++ Mail-Thread-2.1_richardc/t/testbox-9	2003-04-13 01:10:55.000000000 +0100
@@ -0,0 +1,415 @@
+From london.pm-admin@london.pm.org Tue Mar 11 10:03:04 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Tue, 11 Mar 2003 10:03:04 +0000 (GMT)
+Received: from punt-2.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1047372076:20:09615:18; Tue, 11 Mar 2003 08:41:16 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-2.mail.demon.net
+           id aa2008852; 11 Mar 2003 8:40 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18sfF0-00049Z-00; Tue, 11 Mar 2003 08:36:06 +0000
+Received: from cat.ourshack.com ([212.74.28.153])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18sfEk-000498-00
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 08:35:50 +0000
+Received: from abw by cat.ourshack.com with local (Exim 4.05)
+	id 18sfIO-000FHw-00
+	for london.pm@london.pm.org; Tue, 11 Mar 2003 08:39:36 +0000
+From: Andy Wardley <abw@andywardley.com>
+To: london.pm@london.pm.org
+Subject: Perl 6 Apocalypse 6
+Message-ID: <20030311083936.GB26176@cat.ourshack.com>
+Mime-Version: 1.0
+Content-Type: text/plain; charset=us-ascii
+Content-Disposition: inline
+User-Agent: Mutt/1.4i
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Tue, 11 Mar 2003 08:39:36 +0000
+Date: Tue, 11 Mar 2003 08:39:36 +0000
+Status: RO
+Content-Length: 119
+
+In case you haven't already seen it, Apocalypse 6 is out.
+
+  http://www.perl.com/pub/a/2003/03/07/apocalypse6.html
+
+A
+
+
+From london.pm-admin@london.pm.org Tue Mar 11 10:03:17 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Tue, 11 Mar 2003 10:03:17 +0000 (GMT)
+Received: from punt-1.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1047376968:10:08748:9; Tue, 11 Mar 2003 10:02:48 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-1.mail.demon.net
+           id ab1119973; 11 Mar 2003 10:02 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18sgF4-0004iq-00; Tue, 11 Mar 2003 09:40:14 +0000
+Received: from mx1.fotango.com ([195.157.53.90])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18sgEk-0004iD-00
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 09:39:54 +0000
+Received: from cowgirl (localhost.localdomain [127.0.0.1])
+	by mx1.fotango.com (8.12.8/8.12.8) with ESMTP id h2B9hPS6003269
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 09:43:25 GMT
+Received: from 192.168.1.26 (piezo [192.168.1.26])
+	by cowgirl (Postfix) with ESMTP id D0514329E3
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 09:48:19 +0000 (GMT)
+Mime-Version: 1.0
+X-Sender: blech@husk.org
+Message-Id: <f05200f00ba93600e2e7a@10.0.0.250>
+In-Reply-To: <20030311083936.GB26176@cat.ourshack.com>
+References: <20030311083936.GB26176@cat.ourshack.com>
+To: london.pm@london.pm.org
+From: Paul Mison <paulm@husk.org>
+Subject: Re: Perl 6 Apocalypse 6
+Content-Type: text/plain; charset="us-ascii" ; format="flowed"
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Tue, 11 Mar 2003 09:43:42 +0000
+Date: Tue, 11 Mar 2003 09:43:42 +0000
+Status: RO
+Content-Length: 229
+
+On 11/03/2003 at 08:39 +0000, Andy Wardley wrote:
+>In case you haven't already seen it, Apocalypse 6 is out.
+>
+>   http://www.perl.com/pub/a/2003/03/07/apocalypse6.html
+
+And Apocalypse 7, too.
+
+-- 
+:: paul
+:: we're like crystal
+
+
+From london.pm-admin@london.pm.org Tue Mar 11 12:41:18 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Tue, 11 Mar 2003 12:41:18 +0000 (GMT)
+Received: from punt-1.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1047383462:10:24349:155; Tue, 11 Mar 2003 11:51:02 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-1.mail.demon.net
+           id aa1025599; 11 Mar 2003 11:50 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18shyN-0005YR-00; Tue, 11 Mar 2003 11:31:07 +0000
+Received: from post.tobit.co.uk ([212.240.163.99])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18shxp-0005Y1-00
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 11:30:33 +0000
+Received: from [192.168.242.37] (helo=[192.168.242.37])
+	by post.tobit.co.uk with esmtp (Exim 4.12)
+	id 18si1S-0006l0-00
+	for london.pm@london.pm.org; Tue, 11 Mar 2003 11:34:18 +0000
+Subject: Re: Perl 6 Apocalypse 6
+From: Dirk Koopman <djk@tobit.co.uk>
+To: london.pm@london.pm.org
+In-Reply-To: <f05200f00ba93600e2e7a@10.0.0.250>
+References: <20030311083936.GB26176@cat.ourshack.com>
+	 <f05200f00ba93600e2e7a@10.0.0.250>
+Content-Type: text/plain
+Organization: Tobit Computer Co Ltd, http://www.tobit.co.uk
+Message-Id: <1047382472.1875.19.camel@dirk2.int.tobit.co.uk>
+Mime-Version: 1.0
+X-Mailer: Ximian Evolution 1.2.2 
+Content-Transfer-Encoding: 7bit
+X-Spam-Score: -27.5 (---------------------------)
+X-Scanner: exiscan for exim4 (http://duncanthrax.net/exiscan/) *18si1S-0006l0-00*icHIpDgt7y6*
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: 11 Mar 2003 11:34:32 +0000
+Date: 11 Mar 2003 11:34:32 +0000
+Status: RO
+Content-Length: 693
+
+I realise that I am an old and useless programmer, a dinosaur even, but
+is all this going to add up to a language that is:-
+
+a) easier to learn
+b) faster both to parse and execute
+c) still something that could reasonably be called perl?
+
+Dirk
+
+On Tue, 2003-03-11 at 09:43, Paul Mison wrote:
+> On 11/03/2003 at 08:39 +0000, Andy Wardley wrote:
+> >In case you haven't already seen it, Apocalypse 6 is out.
+> >
+> >   http://www.perl.com/pub/a/2003/03/07/apocalypse6.html
+> 
+> And Apocalypse 7, too.
+-- 
+Please Note: Some Quantum Physics Theories Suggest That When the
+Consumer Is Not Directly Observing This Product, It May Cease to
+Exist or Will Exist Only in a Vague and Undetermined State.
+
+
+
+
+From london.pm-admin@london.pm.org Tue Mar 11 12:41:17 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Tue, 11 Mar 2003 12:41:17 +0000 (GMT)
+Received: from punt-2.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1047384983:20:01221:83; Tue, 11 Mar 2003 12:16:23 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-2.mail.demon.net
+           id ab2125275; 11 Mar 2003 12:15 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18si88-0005fk-00; Tue, 11 Mar 2003 11:41:12 +0000
+Received: from mta05-svc.ntlworld.com ([62.253.162.45])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18si7j-0005fJ-00
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 11:40:47 +0000
+Received: from quietstars.com ([62.252.188.133]) by mta05-svc.ntlworld.com
+          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with ESMTP
+          id <20030311114436.MFSZ3525.mta05-svc.ntlworld.com@quietstars.com>
+          for <london.pm@london.pm.org>; Tue, 11 Mar 2003 11:44:36 +0000
+Subject: Re: Perl 6 Apocalypse 6
+Content-Type: text/plain; charset=US-ASCII; format=flowed
+Mime-Version: 1.0 (Apple Message framework v551)
+From: Adrian Howard <adrianh@quietstars.com>
+To: london.pm@london.pm.org
+Content-Transfer-Encoding: 7bit
+In-Reply-To: <1047382472.1875.19.camel@dirk2.int.tobit.co.uk>
+Message-Id: <D4CA215C-53B6-11D7-8510-0030654E40D0@quietstars.com>
+X-Mailer: Apple Mail (2.551)
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Tue, 11 Mar 2003 11:44:34 +0000
+Date: Tue, 11 Mar 2003 11:44:34 +0000
+Status: RO
+Content-Length: 700
+
+On Tuesday, March 11, 2003, at 11:34  am, Dirk Koopman wrote:
+
+> I realise that I am an old and useless programmer, a dinosaur even, but
+> is all this going to add up to a language that is:-
+>
+> a) easier to learn
+
+Not any harder anyway. There's more to learn obviously because there is 
+more functionality.
+
+> b) faster both to parse and execute
+
+Yup. Lots more room for optimisation with declaration of args and the 
+more complex typing.
+
+> c) still something that could reasonably be called perl?
+
+I think so from what I've seen. Your milage may vary.
+
+You also forgot:
+
+	d) more useful
+
+Which, for me, is a resounding "Hell yeah!". I want macros, 
+multimethods and methodsubs *now* :-)
+
+Adrian
+
+
+
+From london.pm-admin@london.pm.org Tue Mar 11 14:50:17 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Tue, 11 Mar 2003 14:50:17 +0000 (GMT)
+Received: from punt-1.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1047392543:10:27211:26; Tue, 11 Mar 2003 14:22:23 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-1.mail.demon.net
+           id aa1117029; 11 Mar 2003 14:21 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18skW7-00072d-00; Tue, 11 Mar 2003 14:14:07 +0000
+Received: from mail.webbox.com ([207.231.76.69])
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18skVU-0006vx-00
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 14:13:28 +0000
+Received: from mdev [207.183.234.66] by mail.webbox.com
+  (SMTPD32-6.06) id A09253DB0154; Tue, 11 Mar 2003 06:20:02 -0800
+To: london.pm@london.pm.org
+CC: 
+From: "Dave Cross" <dave@dave.org.uk>
+Subject: Re: Perl 6 Apocalypse 6
+Message-Id: <11030370.22639@webbox.com>
+Mime-Version: 1.0
+Content-Type: text/plain
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: Tue, 11 Mar 2003 06:20:04 -0800
+Date: Tue, 11 Mar 2003 06:20:04 -0800
+Status: RO
+Content-Length: 314
+
+
+From: merlyn@stonehenge.com (Randal L. Schwartz)
+Date: 3/11/03 1:30:51 PM
+
+> Will the llama and alpaca for perl6 be easier or harder to
+> read?
+
+alpaca?
+
+Am I missing something here?
+
+Dave...
+
+-- 
+<http://www.dave.org.uk>
+
+"Let me see you make decisions, without your television"
+   - Depeche Mode (Stripped)
+
+
+
+
+
+From london.pm-admin@london.pm.org Tue Mar 11 14:59:04 2003
+Return-Path: <london.pm-admin@london.pm.org>
+Received: from pop3.demon.co.uk
+	by localhost with POP3 (fetchmail-6.2.1)
+	for richardc@localhost (single-drop); Tue, 11 Mar 2003 14:59:04 +0000 (GMT)
+Received: from punt-1.mail.demon.net by mailstore for richardc@mirth.demon.co.uk
+          id 1047394517:10:25799:67; Tue, 11 Mar 2003 14:55:17 GMT
+Received: from penderel.state51.co.uk ([193.82.57.128]) by punt-1.mail.demon.net
+           id aa1125596; 11 Mar 2003 14:54 GMT
+Received: from localhost ([127.0.0.1] helo=penderel.state51.co.uk)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18skpT-0007Ju-00; Tue, 11 Mar 2003 14:34:07 +0000
+Received: from red.stonehenge.com ([65.208.40.162] ident=postfix)
+	by penderel.state51.co.uk with esmtp (Exim 3.35 #1 (Debian))
+	id 18skoq-0007J8-00
+	for <london.pm@london.pm.org>; Tue, 11 Mar 2003 14:33:29 +0000
+Received: by red.stonehenge.com (Postfix, from userid 1001)
+	id E44468250F; Tue, 11 Mar 2003 06:37:19 -0800 (PST)
+To: london.pm@london.pm.org
+Subject: Re: Perl 6 Apocalypse 6
+References: <11030370.22639@webbox.com>
+From: merlyn@stonehenge.com (Randal L. Schwartz)
+In-Reply-To: <11030370.22639@webbox.com>
+Message-ID: <86fzpu3r6o.fsf@red.stonehenge.com>
+User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.1
+MIME-Version: 1.0
+Content-Type: text/plain; charset=us-ascii
+Sender: london.pm-admin@london.pm.org
+Errors-To: london.pm-admin@london.pm.org
+X-BeenThere: london.pm@london.pm.org
+X-Mailman-Version: 2.0.11
+Precedence: bulk
+Reply-To: london.pm@london.pm.org
+List-Help: <mailto:london.pm-request@london.pm.org?subject=help>
+List-Post: <mailto:london.pm@london.pm.org>
+List-Subscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=subscribe>
+List-Id: London.pm Perl M[ou]ngers <london.pm.london.pm.org>
+List-Unsubscribe: <http://london.pm.org/mailman/listinfo/london.pm>,
+	<mailto:london.pm-request@london.pm.org?subject=unsubscribe>
+List-Archive: <http://london.pm.org/pipermail/london.pm/>
+X-Original-Date: 11 Mar 2003 06:37:19 -0800
+Date: 11 Mar 2003 06:37:19 -0800
+Status: RO
+Content-Length: 963
+Lines: 29
+
+>>>>> "Dave" == Dave Cross <dave@dave.org.uk> writes:
+
+Dave> From: merlyn@stonehenge.com (Randal L. Schwartz)
+Dave> Date: 3/11/03 1:30:51 PM
+
+>> Will the llama and alpaca for perl6 be easier or harder to
+>> read?
+
+Dave> alpaca?
+
+Dave> Am I missing something here?
+
+
+Well, O'Reilly probably doesn't want me to scoop them in public, but
+I'm in the final edit phase of
+
+        Learning Perl Objects, References, and Modules
+
+which is the sequel in form and function to the Llama.  And yes, it'll
+have an alpaca on the cover.  It's the textbook for our 4-day class
+that follows the llama course.  Exercises with answers, and jokes.
+
+Expected debut at the OSCON this summer.
+
+-- 
+Randal L. Schwartz - Stonehenge Consulting Services, Inc. - +1 503 777 0095
+<merlyn@stonehenge.com> <URL:http://www.stonehenge.com/merlyn/>
+Perl/Unix/security consulting, Technical writing, Comedy, etc. etc.
+See PerlTraining.Stonehenge.com for onsite and open-enrollment Perl training!
+
+
