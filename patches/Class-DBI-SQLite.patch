diff -urN Class-DBI-SQLite-0.02/lib/Class/DBI/SQLite.pm Class-DBI-SQLite-0.02_hck/lib/Class/DBI/SQLite.pm
--- Class-DBI-SQLite-0.02/lib/Class/DBI/SQLite.pm	2002-08-09 08:02:26.000000000 +0100
+++ Class-DBI-SQLite-0.02_hck/lib/Class/DBI/SQLite.pm	2003-10-16 01:47:19.000000000 +0100
@@ -35,7 +35,7 @@
     my($sql) = $sth->fetchrow_array;
     $sth->finish;
 
-    my $parser = SQL::Parser->new('AnyData', { RaiseError => 1});
+    my $parser = SQL::Parser->new('AnyData', { RaiseError => 0, PrintError => 0});
     $parser->parse($sql);
     my $structure = $parser->structure;
     my $primary;
diff -urN Class-DBI-SQLite-0.02/t/02_lazy.t Class-DBI-SQLite-0.02_hck/t/02_lazy.t
--- Class-DBI-SQLite-0.02/t/02_lazy.t	1970-01-01 01:00:00.000000000 +0100
+++ Class-DBI-SQLite-0.02_hck/t/02_lazy.t	2003-10-16 01:44:53.000000000 +0100
@@ -0,0 +1,30 @@
+use strict;
+use Test::More tests => 42;
+use lib 't/lib';
+
+use Class::DBI::SQLite;
+
+use Lazy;
+Lazy->CONSTRUCT;
+
+for my $i (1..10) {
+    my $film = Lazy->create({
+	title => "movie-$i",
+	director => "director-$i",
+    });
+    isa_ok $film, 'Lazy';
+    like $film->id, qr/\d+/, "id is " . $film->id;
+    is $film->title, "movie-$i";
+    is $film->director, "director-$i";
+}
+
+Lazy->dbi_commit;
+Lazy->db_Main->disconnect;
+
+my @movies = Lazy->retrieve_all;
+is @movies, 10, '10 movies out there';
+
+my %seen;
+my @uniq = grep { !$seen{$_}++ } map $_->id, @movies;
+is @uniq, 10, "10 unique ids - @uniq";
+
diff -urN Class-DBI-SQLite-0.02/t/lib/Lazy.pm Class-DBI-SQLite-0.02_hck/t/lib/Lazy.pm
--- Class-DBI-SQLite-0.02/t/lib/Lazy.pm	1970-01-01 01:00:00.000000000 +0100
+++ Class-DBI-SQLite-0.02_hck/t/lib/Lazy.pm	2003-10-16 01:46:42.000000000 +0100
@@ -0,0 +1,28 @@
+package Lazy;
+use strict;
+# this film's possibly more the Dirty Dozen
+
+use File::Temp qw(tempdir tempfile);
+
+use base qw(Class::DBI::SQLite);
+BEGIN {
+    my $dir = tempdir( CLEANUP => 1 );
+    my($fh, $filename) = tempfile( DIR => $dir );
+    __PACKAGE__->set_db('Main', "dbi:SQLite:dbname=$filename", '', '');
+}
+
+sub CONSTRUCT {
+    my $class = shift;
+    $class->db_Main->do(<<'SQL');
+CREATE TABLE Movies (
+    id INTEGER PRIMARY KEY,
+    title,
+    director
+)
+SQL
+    ;
+
+    $class->set_up_table('Movies');
+}
+
+1;
